---
title: "Getting started with R"
author: Bochra chemam
date: today
format: html
---

### Exercise 1 {#sec-1}

* Create a vector of the letters A, B and C.

```{r}
# Your answer in code
 c("A","B","C")
```
> Your answer as text



* Assign the vector to a variable `my_letters`
```{r}
# Your answer in code
my_letters <- c("A","B","C")
```


* Check the what happens when you run `letters` (just this) on the command line.
```{r}
# Your answer in code
letters
```

> Your answer as text



* What happens when you concatenate two vectors? Add `c(my_letters , my_letters)`
```{r}
# Your answer in code
 c(my_letters , my_letters)
```

> Your answer as text



* Add the number 1 to letters. What happens to the type of the vector?
```{r}
# Your answer in code

 letters + 1
```

> Your answer as text



### Exercise 2


1. Create a vector `my_vec` with the numbers from 1 through 8.
2. Apply the operation `+2` to the vector/
3. Add the vector containing 1, 2, 3, 4 to `my_vec`. What do you observe?

```{r}
# Your answer in code
my_vec <- seq(from = 1, to = 8)
my_vec <- my_vec+2
my_vec <- my_vec+ c(1,2,3,4)


```



### Exercise 3

* Consider the R output of the matrix below:

```
 [,1] [,2]
 [1,]    4    1
 [2,]    9    5
 [3,]   10    7
```

1. What was one of the correct commands used to write this matrix?
2. Assign the matrix as `A`
3. Check the dimensions
4. Extract the element `5`
5. Add the vector `c(0,0,0)` as a new column and update `A`
6. Modify the element 4 to `0`
7. Compute the transpose of `A`

```{r}
#1 write Matrix
matrix(1:6, nrow = 3)
#2 Assign it as A
A <- matrix(1:6, nrow = 3)
#3 chech dim
dim(A)
#4 extract the 5th element
A[3:3]
#5 add new column
A <- cbind(A, c(0,0,0))
#6 modify the 4th element to 0
A[A=4] <- 0
A
#7transpose
t(A)




```


8. Are any values in `A` larger than 10? 
```{r}
# Your answer in code
A[A > 10] 
```

9. Are all values in `A` smaller than 10?
```{r}
# Your answer in code
A[A < 10] 
```

### Exercise 4

1. Create a function that sums up two values even if provided as characters values

```{r}
# Your answer in code





```


### Exercise 5

1. Create a function that returns the mean, median and standard deviation.

```{r}
# Your answer in code
#we assume that the input will be always numeric
quick_stats <- function(x){
  Mean_value <- mean(x,na.rm=TRUE)
  Median_value <- median(x,na.rm=TRUE)
  SD_value <- sd(x,na.rm=TRUE)

  return(list(mean = Mean_value, median = Median_value, sd = SD_value))
}

```


### Exercise 6
1. Create a pipe statement that counts the number of NAs in vector containing numbers, characters and missing values.
The output of `c('1' , "a", NA, "2", NA)` should be 2.

```{r}
# Your answer in code
install.packages("magrittr")
library(magrittr)
vec <- c('1', "a", NA, "2", NA)
vec %>%
  is.na() %>%
  sum()

```


